---
import { Image } from 'astro:assets';
import logo from '../../public/images/lighthouse-mentoring-logo.png';

const currentPath = Astro.url.pathname;

const navLinks = [
  { 
    href: '/services/', 
    label: 'Services',
    dropdown: [
      { href: '/services/', label: 'Our Wellbeing Audit Service' },
      { href: '/wellbeing-audit/', label: 'How It Works' },
      { href: '/iso-45003/', label: 'ISO 45003 Framework' },
      { href: '/stress-risk-assessment/', label: 'About Stress Risk Assessment' },
      { href: '/psychosocial-hazards/', label: 'About Psychosocial Hazards' },
    ]
  },
  { href: '/our-approach/', label: 'Our Approach' },
  { href: '/about/', label: 'About' },
  { href: '/insights/', label: 'Insights' },
];

const isActive = (href: string) => {
  if (href === '/') return currentPath === href;
  return currentPath.startsWith(href);
};
---

<header class="sticky top-0 z-40 bg-white/95 backdrop-blur-xl border-b border-gray-100">
  <nav class="container" aria-label="Main navigation">
    <div class="flex items-center justify-between h-16 lg:h-20">
      <!-- Logo -->
      <a href="/" class="flex items-center space-x-3 group">
        <Image 
          src={logo}
          alt="Lighthouse Mentoring" 
          width={40} 
          height={40}
          format="webp"
          quality={90}
          loading="eager"
          class="group-hover:scale-110 transition-transform duration-300"
        />
        <span class="font-display font-semibold text-lg text-navy-700 hidden sm:block">
          Lighthouse Mentoring
        </span>
      </a>
      
      <!-- Desktop Navigation -->
      <div class="hidden lg:flex items-center space-x-1">
        {navLinks.map(link => (
          link.dropdown ? (
            <div class="relative group">
              <a 
                href={link.href}
                class={`px-4 py-2 rounded-lg font-medium transition-colors duration-200 no-style inline-flex items-center ${
                  isActive(link.href) 
                    ? 'bg-navy-50 text-navy-700' 
                    : 'text-gray-600 hover:text-navy-700 hover:bg-gray-50'
                }`}
                aria-current={isActive(link.href) ? 'page' : undefined}
              >
                {link.label}
                <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
              </a>
              <div class="absolute top-full left-0 mt-1 w-48 sm:w-56 md:w-64 bg-white rounded-lg shadow-lg border border-gray-100 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200">
                {link.dropdown.map(item => (
                  <a 
                    href={item.href}
                    class="block px-4 py-2 text-sm text-gray-600 hover:text-navy-700 hover:bg-gray-50 no-style first:rounded-t-lg last:rounded-b-lg"
                  >
                    {item.label}
                  </a>
                ))}
              </div>
            </div>
          ) : (
            <a 
              href={link.href}
              class={`px-4 py-2 rounded-lg font-medium transition-colors duration-200 no-style ${
                isActive(link.href) 
                  ? 'bg-navy-50 text-navy-700' 
                  : 'text-gray-600 hover:text-navy-700 hover:bg-gray-50'
              }`}
              aria-current={isActive(link.href) ? 'page' : undefined}
            >
              {link.label}
            </a>
          )
        ))}
        <a 
          href="/contact/" 
          class="ml-4 btn btn-primary text-sm"
        >
          Book Discovery Call
        </a>
      </div>
      
      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-button"
        type="button"
        class="lg:hidden p-2 rounded-lg text-gray-600 hover:bg-gray-50"
        aria-expanded="false"
        aria-controls="mobile-menu"
      >
        <span class="sr-only">Open menu</span>
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path 
            stroke-linecap="round" 
            stroke-linejoin="round" 
            stroke-width="2" 
            d="M4 6h16M4 12h16M4 18h16"
          />
        </svg>
      </button>
    </div>
    
    <!-- Mobile Navigation -->
    <div 
      id="mobile-menu"
      class="hidden lg:hidden pb-4"
      role="navigation"
      aria-label="Mobile navigation"
    >
      <div class="flex flex-col space-y-2 pt-2">
        {navLinks.map(link => (
          link.dropdown ? (
            <div>
              <a 
                href={link.href}
                class={`px-4 py-3 rounded-lg font-medium transition-colors duration-200 no-style block ${
                  isActive(link.href) 
                    ? 'bg-navy-50 text-navy-700' 
                    : 'text-gray-600 hover:text-navy-700 hover:bg-gray-50'
                }`}
              >
                {link.label}
              </a>
              <div class="ml-4 mt-2 space-y-1">
                {link.dropdown.map(item => (
                  <a 
                    href={item.href}
                    class="block px-4 py-2 text-sm text-gray-600 hover:text-navy-700 hover:bg-gray-50 no-style rounded-lg"
                  >
                    {item.label}
                  </a>
                ))}
              </div>
            </div>
          ) : (
            <a 
              href={link.href}
              class={`px-4 py-3 rounded-lg font-medium transition-colors duration-200 no-style ${
                isActive(link.href) 
                  ? 'bg-navy-50 text-navy-700' 
                  : 'text-gray-600 hover:text-navy-700 hover:bg-gray-50'
              }`}
            >
              {link.label}
            </a>
          )
        ))}
        <a 
          href="/contact/" 
          class="btn btn-primary text-center mt-4"
        >
          Book Discovery Call
        </a>
      </div>
    </div>
  </nav>
</header>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', (e) => {
        e.stopPropagation();
        const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
        
        mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
        mobileMenu.classList.toggle('hidden');
        
        // Update icon
        const svg = mobileMenuButton.querySelector('svg');
        if (svg) {
          if (isExpanded) {
            svg.innerHTML = `
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
            `;
          } else {
            svg.innerHTML = `
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            `;
          }
        }
      });
      
      // Close mobile menu when clicking outside
      document.addEventListener('click', (e) => {
        const target = e.target;
        if (!mobileMenuButton.contains(target) && !mobileMenu.contains(target)) {
          mobileMenu.classList.add('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'false');
          
          const svg = mobileMenuButton.querySelector('svg');
          if (svg) {
            svg.innerHTML = `
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
            `;
          }
        }
      });
      
      // Close menu when clicking on a link
      const mobileLinks = mobileMenu.querySelectorAll('a');
      mobileLinks.forEach(link => {
        link.addEventListener('click', () => {
          mobileMenu.classList.add('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'false');
          const svg = mobileMenuButton.querySelector('svg');
          if (svg) {
            svg.innerHTML = `
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
            `;
          }
        });
      });
    }
  });
</script>