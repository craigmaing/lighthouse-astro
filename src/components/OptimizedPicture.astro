---
import { Picture } from 'astro:assets';
import type { ImageMetadata } from 'astro';

export interface Props {
  src: ImageMetadata;
  alt: string;
  class?: string;
  loading?: 'lazy' | 'eager';
  priority?: boolean;
  widths?: number[];
  sizes?: string;
  formats?: ('webp' | 'avif' | 'jpg' | 'png')[];
  quality?: number;
}

const { 
  src,
  alt,
  class: className = '',
  loading = 'lazy',
  priority = false,
  widths = [360, 768, 1024, 1440, 1920],
  sizes = '(max-width: 360px) 360px, (max-width: 768px) 768px, (max-width: 1024px) 1024px, (max-width: 1440px) 1440px, 1920px',
  formats = ['avif', 'webp'],
  quality = 80
} = Astro.props;

// For priority images (like hero), use eager loading and higher quality
const finalLoading = priority ? 'eager' : loading;
const finalQuality = priority ? 85 : quality;

// Add fetchpriority for critical images
const fetchPriority = priority ? 'high' : undefined;
---

<Picture
  src={src}
  alt={alt}
  class={className}
  loading={finalLoading}
  widths={widths}
  sizes={sizes}
  formats={formats}
  quality={finalQuality}
  {...fetchPriority ? { 'data-fetchpriority': fetchPriority } : {}}
/>